function [flag_decod,bit_scrm,decoded_bits]=tpc_decode(in,c_r)

bit_scrm=[];
switch c_r
    case 1 %'.431' % OK but not cheked
        H = [1 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0;0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0;0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0;1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0;0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0 1];
        S = [1 0 0 1 0;0 1 0 0 1;1 0 1 1 0;0 1 0 1 1;1 0 1 1 1;1 1 0 0 1;1 1 1 1 0;0 1 1 1 1;1 0 1 0 1;1 1 0 0 0;0 1 1 0 0;0 0 1 1 0;0 0 0 1 1;1 0 0 1 1;1 1 0 1 1;1 1 1 1 1;1 1 1 0 1;1 1 1 0 0;0 1 1 1 0;0 0 1 1 1;1 0 0 0 1;1 1 0 1 0;0 1 1 0 1;1 0 1 0 0;0 1 0 1 0;0 0 1 0 1;1 0 0 0 0;0 1 0 0 0;0 0 1 0 0;0 0 0 1 0;0 0 0 0 1];
%         r=5;
        a = 21; b = 21;
        len_out = 441;
        N_plus_1 = 32;
    case 2 %.533 (1/2) % OK
        H = [1 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0;0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0;0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0;1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0;0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0 1];
        S = [1 0 0 1 0;0 1 0 0 1;1 0 1 1 0;0 1 0 1 1;1 0 1 1 1;1 1 0 0 1;1 1 1 1 0;0 1 1 1 1;1 0 1 0 1;1 1 0 0 0;0 1 1 0 0;0 0 1 1 0;0 0 0 1 1;1 0 0 1 1;1 1 0 1 1;1 1 1 1 1;1 1 1 0 1;1 1 1 0 0;0 1 1 1 0;0 0 1 1 1;1 0 0 0 1;1 1 0 1 0;0 1 1 0 1;1 0 1 0 0;0 1 0 1 0;0 0 1 0 1;1 0 0 0 0;0 1 0 0 0;0 0 1 0 0;0 0 0 1 0;0 0 0 0 1];
%         r=5;
        a = 26; b = 21;
        len_out = 546;
        N_plus_1 = 32;
    case 3 %.660 (2/3) % OK
        H = [1 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0;0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0;0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0;1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0;0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0 1];
        S = [1 0 0 1 0;0 1 0 0 1;1 0 1 1 0;0 1 0 1 1;1 0 1 1 1;1 1 0 0 1;1 1 1 1 0;0 1 1 1 1;1 0 1 0 1;1 1 0 0 0;0 1 1 0 0;0 0 1 1 0;0 0 0 1 1;1 0 0 1 1;1 1 0 1 1;1 1 1 1 1;1 1 1 0 1;1 1 1 0 0;0 1 1 1 0;0 0 1 1 1;1 0 0 0 1;1 1 0 1 0;0 1 1 0 1;1 0 1 0 0;0 1 0 1 0;0 0 1 0 1;1 0 0 0 0;0 1 0 0 0;0 0 1 0 0;0 0 0 1 0;0 0 0 0 1];
%         r=5;
        a = 26; b = 26;
        len_out = 676;
        N_plus_1 = 32;
    case 4 %'.495' % NOT OK
        H = [1 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0;0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0;0 0 1 0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0;1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0 1 0;0 1 0 1 1 1 0 1 1 0 0 0 1 1 1 1 1 0 0 1 1 0 1 0 0 1 0 0 0 0 1];
        S = [1 0 0 1 0;0 1 0 0 1;1 0 1 1 0;0 1 0 1 1;1 0 1 1 1;1 1 0 0 1;1 1 1 1 0;0 1 1 1 1;1 0 1 0 1;1 1 0 0 0;0 1 1 0 0;0 0 1 1 0;0 0 0 1 1;1 0 0 1 1;1 1 0 1 1;1 1 1 1 1;1 1 1 0 1;1 1 1 0 0;0 1 1 1 0;0 0 1 1 1;1 0 0 0 1;1 1 0 1 0;0 1 1 0 1;1 0 1 0 0;0 1 0 1 0;0 0 1 0 1;1 0 0 0 0;0 1 0 0 0;0 0 1 0 0;0 0 0 1 0;0 0 0 0 1];
        a = 26; b = 26; c = 3;
%         r=5;
        len_out = 2028;
        N_plus_1 = 32;
    case 5 %.793 (4/5) % OK
        H = [1 1 1 1 1 1 0 1 0 1 0 1 1 0 0 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0;0 1 1 1 1 1 1 0 1 0 1 0 1 1 0 0 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0;0 0 1 1 1 1 1 1 0 1 0 1 0 1 1 0 0 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 0 1 0 0 0 1 1 0 0 0 0 1 0 0 0;0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 1 0 0 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 0 1 0 0 0 1 1 0 0 0 0 1 0 0;0 0 0 0 1 1 1 1 1 1 0 1 0 1 0 1 1 0 0 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 0 1 0 0 0 1 1 0 0 0 0 1 0;1 1 1 1 1 0 1 0 1 0 1 1 0 0 1 1 0 1 1 1 0 1 1 0 1 0 0 1 0 0 1 1 1 0 0 0 1 0 1 1 1 1 0 0 1 0 1 0 0 0 1 1 0 0 0 0 1 0 0 0 0 0 1];
        S = [1 0 0 0 0 1;1 1 0 0 0 1;1 1 1 0 0 1;1 1 1 1 0 1;1 1 1 1 1 1;1 1 1 1 1 0;0 1 1 1 1 1;1 0 1 1 1 0;0 1 0 1 1 1;1 0 1 0 1 0;0 1 0 1 0 1;1 0 1 0 1 1;1 1 0 1 0 0;0 1 1 0 1 0;0 0 1 1 0 1;1 0 0 1 1 1;1 1 0 0 1 0;0 1 1 0 0 1;1 0 1 1 0 1;1 1 0 1 1 1;1 1 1 0 1 0;0 1 1 1 0 1;1 0 1 1 1 1;1 1 0 1 1 0;0 1 1 0 1 1;1 0 1 1 0 0;0 1 0 1 1 0;0 0 1 0 1 1;1 0 0 1 0 0;0 1 0 0 1 0;0 0 1 0 0 1;1 0 0 1 0 1;1 1 0 0 1 1;1 1 1 0 0 0;0 1 1 1 0 0;0 0 1 1 1 0;0 0 0 1 1 1;1 0 0 0 1 0;0 1 0 0 0 1;1 0 1 0 0 1;1 1 0 1 0 1;1 1 1 0 1 1;1 1 1 1 0 0;0 1 1 1 1 0;0 0 1 1 1 1;1 0 0 1 1 0;0 1 0 0 1 1;1 0 1 0 0 0;0 1 0 1 0 0;0 0 1 0 1 0;0 0 0 1 0 1;1 0 0 0 1 1;1 1 0 0 0 0;0 1 1 0 0 0;0 0 1 1 0 0;0 0 0 1 1 0;0 0 0 0 1 1;1 0 0 0 0 0;0 1 0 0 0 0;0 0 1 0 0 0;0 0 0 1 0 0;0 0 0 0 1 0;0 0 0 0 0 1];
%         r=6;
        a = 57; b = 57;
        len_out = 3249;
        N_plus_1 = 64;
    case 8 %.879 (7/8) % OK
        H = [1 0 0 1 0 0 1 1 0 1 0 0 1 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 0 1 0 1 1 0 0 1 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 0;0 1 0 0 1 0 0 1 1 0 1 0 0 1 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 0 1 0 1 1 0 0 1 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0;0 0 1 0 0 1 0 0 1 1 0 1 0 0 1 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 0 1 0 1 1 0 0 1 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 1 0 0 0 0;0 0 0 1 0 0 1 0 0 1 1 0 1 0 0 1 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 0 1 0 1 1 0 0 1 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 1 0 0 0;1 0 0 1 1 0 1 0 0 1 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 0 1 0 1 1 0 0 1 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0 0;0 1 0 0 1 1 0 1 0 0 1 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 0 1 0 1 1 0 0 1 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1 0;0 0 1 0 0 1 1 0 1 0 0 1 1 1 1 0 1 1 1 0 0 0 0 1 1 1 1 1 1 1 0 0 0 1 1 1 0 1 1 0 0 0 1 0 1 0 0 1 0 1 1 1 1 1 0 1 0 1 0 1 0 0 0 0 1 0 1 1 0 1 1 1 1 0 0 1 1 1 0 0 1 0 1 0 1 1 0 0 1 1 0 0 0 0 0 1 1 0 1 1 0 1 0 1 1 1 0 1 0 0 0 1 1 0 0 1 0 0 0 1 0 0 0 0 0 0 1];
        S = [1 0 0 0 1 0 0;0 1 0 0 0 1 0;0 0 1 0 0 0 1;1 0 0 1 1 0 0;0 1 0 0 1 1 0;0 0 1 0 0 1 1;1 0 0 1 1 0 1;1 1 0 0 0 1 0;0 1 1 0 0 0 1;1 0 1 1 1 0 0;0 1 0 1 1 1 0;0 0 1 0 1 1 1;1 0 0 1 1 1 1;1 1 0 0 0 1 1;1 1 1 0 1 0 1;1 1 1 1 1 1 0;0 1 1 1 1 1 1;1 0 1 1 0 1 1;1 1 0 1 0 0 1;1 1 1 0 0 0 0;0 1 1 1 0 0 0;0 0 1 1 1 0 0;0 0 0 1 1 1 0;0 0 0 0 1 1 1;1 0 0 0 1 1 1;1 1 0 0 1 1 1;1 1 1 0 1 1 1;1 1 1 1 1 1 1;1 1 1 1 0 1 1;1 1 1 1 0 0 1;1 1 1 1 0 0 0;0 1 1 1 1 0 0;0 0 1 1 1 1 0;0 0 0 1 1 1 1;1 0 0 0 0 1 1;1 1 0 0 1 0 1;1 1 1 0 1 1 0;0 1 1 1 0 1 1;1 0 1 1 0 0 1;1 1 0 1 0 0 0;0 1 1 0 1 0 0;0 0 1 1 0 1 0;0 0 0 1 1 0 1;1 0 0 0 0 1 0;0 1 0 0 0 0 1;1 0 1 0 1 0 0;0 1 0 1 0 1 0;0 0 1 0 1 0 1;1 0 0 1 1 1 0;0 1 0 0 1 1 1;1 0 1 0 1 1 1;1 1 0 1 1 1 1;1 1 1 0 0 1 1;1 1 1 1 1 0 1;1 1 1 1 0 1 0;0 1 1 1 1 0 1;1 0 1 1 0 1 0;0 1 0 1 1 0 1;1 0 1 0 0 1 0;0 1 0 1 0 0 1;1 0 1 0 0 0 0;0 1 0 1 0 0 0;0 0 1 0 1 0 0;0 0 0 1 0 1 0;0 0 0 0 1 0 1;1 0 0 0 1 1 0;0 1 0 0 0 1 1;1 0 1 0 1 0 1;1 1 0 1 1 1 0;0 1 1 0 1 1 1;1 0 1 1 1 1 1;1 1 0 1 0 1 1;1 1 1 0 0 0 1;1 1 1 1 1 0 0;0 1 1 1 1 1 0;0 0 1 1 1 1 1;1 0 0 1 0 1 1;1 1 0 0 0 0 1;1 1 1 0 1 0 0;0 1 1 1 0 1 0;0 0 1 1 1 0 1;1 0 0 1 0 1 0;0 1 0 0 1 0 1;1 0 1 0 1 1 0;0 1 0 1 0 1 1;1 0 1 0 0 0 1;1 1 0 1 1 0 0;0 1 1 0 1 1 0;0 0 1 1 0 1 1;1 0 0 1 0 0 1;1 1 0 0 0 0 0;0 1 1 0 0 0 0;0 0 1 1 0 0 0;0 0 0 1 1 0 0;0 0 0 0 1 1 0;0 0 0 0 0 1 1;1 0 0 0 1 0 1;1 1 0 0 1 1 0;0 1 1 0 0 1 1;1 0 1 1 1 0 1;1 1 0 1 0 1 0;0 1 1 0 1 0 1;1 0 1 1 1 1 0;0 1 0 1 1 1 1;1 0 1 0 0 1 1;1 1 0 1 1 0 1;1 1 1 0 0 1 0;0 1 1 1 0 0 1;1 0 1 1 0 0 0;0 1 0 1 1 0 0;0 0 1 0 1 1 0;0 0 0 1 0 1 1;1 0 0 0 0 0 1;1 1 0 0 1 0 0;0 1 1 0 0 1 0;0 0 1 1 0 0 1;1 0 0 1 0 0 0;0 1 0 0 1 0 0;0 0 1 0 0 1 0;0 0 0 1 0 0 1;1 0 0 0 0 0 0;0 1 0 0 0 0 0;0 0 1 0 0 0 0;0 0 0 1 0 0 0;0 0 0 0 1 0 0;0 0 0 0 0 1 0;0 0 0 0 0 0 1];
%         r=7;
        a = 120; b = 120;
        len_out = 14400;
        N_plus_1 = 128;
    otherwise
        error('Not supported code rate!');
end

% N=2^r-1;
% pol = gfprimdf(r);pol=pol(end:-1:1);
% %Preparation of parity matrix
% [H,G] = hammgen(r,pol);G=[G(:,r+1:N) G(:,1:r)];%H*G'=0;
% H=[H(:,r+1:N) H(:,1:r)];
% %Syndrome matrix
% S=[];x0=zeros(1,N);for n=1:N, x=x0;x(n)=1-x(n);syndrome=mod(x(1:N)*H',2);S=[S;syndrome];end

% N_plus_1 = N+1;
pack_len=(N_plus_1)^2;
in=in(1:pack_len);

% in = in/std(in);

X=reshape(in,N_plus_1,N_plus_1);

% [X0,flag_decod]=hamming_decode_soft(X,H,S);
[X0,flag_decod]=hamming_decode_soft_mex(X,H,S);
if flag_decod==0
    return;
end

decoded_bits=reshape(X0(1:a,1:b),1,len_out);

% out_tmp = out;
% out(1:2:end) = out_tmp(2:2:end);
% out(2:2:end) = out_tmp(1:2:end);

%%
% fid_wrb_dec = fopen('out_decod_bits.bin','a');fwrite(fid_wrb_dec,[out,zeros(1,7)],'ubit1');fclose(fid_wrb_dec);
%% tmp comment
% 
% bit_scrm = scrm(decoded_bits);
% 
% packet_ = bit_scrm(1:8*fix(length(bit_scrm)/8));
% 
% h = crc.generator('Polynomial', '0x1021', 'InitialState', '0x0000','ReflectInput', false, 'FinalXOR', '0x0000');
% packet_CRC = generate(h, packet_(1:end-16)');
% if ~isequal(packet_CRC(end-15:end)', packet_(end-15:end))
%     flag_decod = false;
%     return;
% end

%%
%crc=crc_gen_universal(packet_rev,'1021',zeros(1,16));
% crc_ = crc_gen(packet_);
% crc = crc_gen(byte_reverse(packet_));

% crc = crc_gen_universal(byte_reverse(packet_),'84bd',zeros(1,16));

% cm = crc_create_struct('CRC-16-CCITT', zeros(1,16), 0, 0, zeros(1,16));
% crc1 = crc_decalc(packet_, cm);
% if ~isequal(crc_calc(packet_(1:end-16),cm), packet_(end-15:end))
%     flag_decod = false;
%     return;
% end

% % byte_reverse(
% switch r
%     case 7
%         crc_ref=[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]; % Unknown
%     case 6
%         crc_ref=[1 1 1 0 1 0 1 0 0 0 1 0 0 1 0 1];
%     case 5
%         crc_ref=[0 1 1 1 0 1 0 1 0 1 1 1 1 0 1 0];
% end
% if ~isequal(crc_,crc_ref)
%     flag_decod=0;
% end



